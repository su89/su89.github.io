<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[利用hexo创建个人博客]]></title>
      <url>http://yoursite.com/2016/08/23/1/</url>
      <content type="html"><![CDATA[<p>0x00 前期准备</p>
<pre><code> 1)环境：macbook，vps（纯净centos 6.2）
 2)博客版本：hexo
    为什么选择 Hexo 呢？
    1、喜欢Hexo的主题，不少都适合中文
    2、配置简单，一键发布
    3、创作者是台湾人，支持一下国人的开发成果！
    4、安全。。hexo自动将网页转换成静态html，不需要php或mysql，vps系统占用资源少。
    5、一个命令就可以搞定. “hexo d”就能将本地写好的文章进行上传，无需进入后台。
3)、GitHub
    在一个朋友的强烈建议下，弃用wordpress。
    参阅了很多文章之后，选择了hexo+GitHub+vps的模式：在本地搭建好hexo之后，将hexo生成的html静态文件上传至github（https:su89.github.io）和vps(210.245.210.223)上。
</code></pre><p>没有vps的朋友，只需要看第一步就可以免费搭建类似https:su89.github.io的个人博客。</p>
<p>0x01 本地搭建hexo</p>
<pre><code>1)环境搭建
   安装git （因为要给github上传文章）    #brew install git
   安装Node.js（因为Hexo是基于Node.js开发的）
2)安装和配置Hexo
以下命令都是直接复制粘贴到电脑终点运行的,上面的环境配置成功以后就可以使用npm安装Hexo了
npm install -g hexo-cli
然后在本地目录创建一个文件夹,比如我创建的是一个Hexo文件夹
然后cd到Hexo文件夹，也就是进去这个文件夹
然后依次执行下面的命令
hexo init
npm install
如果出现很多串代码的话，没有什么明显的错误就表示安装成功。
然后启动本地这个Hexo服务
hexo server
然后打开浏览器，输入http://0.0.0.0:4000/ 有内容证明Hexo安装成功
3）配置github仓库
github官网(http://www.github.com)
注册账号我就不用说了吧，都很简单,然后创建一个的放博客文章的仓库，点击Crete a repositor。
创建的repositor用户名.github.io（例如:su89.github.com）必须是这个结构，不能有一点偏差。就按照我的方式创建就行，只需要把用户名改为你的.然后点击创建，会初始化一个空的仓库.
4) 配置
因为我的macbook已经安装github desktop。SSH配置好了，下面配置本地Hexo
   打开Hexo目录下的_config.yml，拉倒最下面
   deploy:
         type: git
         repository: https://github.com/codertian/codertian.github.io.git
         branch: master
   保存，cd到Hexo的根目录
   依次执行下面的命令
   hexo clean
   hexo g
   hexo d
</code></pre><p>到这一步的时候，你已经拥有了一个自己的个人博客（网址为https:你的用户名.github.io）。<br>下面的步骤适用于拥有个人vps的人，把网站搭建到自己的vps上。</p>
<p>0x02 vps上搭建nginx</p>
<pre><code>1)ssh root@210.245.210.222
ssh连接vps，出现“REMOTE HOST IDENTIFICATION HAS CHANGED”错误。因为我的vps被重装了，rsa key被更改了！
解决办法：vi ~/.ssh/known_hosts
        删除210.245.210.222的相关rsa的信息即可.
2）配置硬盘
yum list installed |grep &quot;httpd&quot;    ＃mysql,vnc,nginx等等
netstat -ano                        ＃先看看有没有安装什么东西   
fdisk -l                            ＃发现/dev/sdb1未被挂载
mkdir /data                         ＃在根目录创建data文件夹
mount /dev/sdb1 /data               ＃将/dev/sdb1挂载
df -Th                              ＃查看/dev/sdb1的文件系统，为ext4
vi /etc/fstab                       #在其中添加/dev/sdb1 /data  ext4  defaults  0 0设置开机启动
3）安装nginx
wget http://nginx.org/download/nginx-1.11.3.tar.gz   下载tar.gz安装包失败，因为域名没有解析
vi /etc/sysconfig/network-scripts/ifcfg-eth0 ＃或vi /etc/resolv.conf  修改dns服务器为8.8.8.8或8.8.4.4

  再次下载成功，正式开始安装 Nginx：

  1、创建Nginx专用用户与用户组
  [root@widlabs ~]# groupadd www                 添加组www
  [root@widlabs ~]# useradd -s /sbin/nologin -M -g www nginx
  2、安装Nginx所需依赖
  [root@widlabs ~]# yum install pcre-devel
  [root@widlabs ~]# yum install zlib-devel
  3、进行nginx编译安装
  [root@widlabs ~]# cd /home/upload        #进入nginx源码包所在目录
  [root@widlabs upload]# tar tar zxvf nginx-1.6.0.tar.gz
  [root@widlabs upload]# cd nginx-1.6.0
  [root@widlabs nginx-1.6.0]# ./configure --prefix=/usr/local/nginx --user=nginx --group=www --with-pcre
  [root@widlabs nginx-1.6.0]# make
  [root@widlabs nginx-1.6.0]# make install

  安装成功！！！
  mkdir /data/www        #创建网页存放目录
  chmod -R nginx.www www #将文件修改为www用户组中nginx用户控制权限
  chmod -R  777 www      ＃权限全开吧，无所谓，反正是静态网站。
</code></pre><p>0x03 deploy配置</p>
<pre><code> 1)在 Hexo 目录下安装 rsync
 2)本地macbook上运行：$ npm install hexo-deployer-rsync --save
 3)根据在 Hexo 中的 _config.yml 中添加 Deploy 的配置，以下是我在自己项目中的配置代码，向github和vps同时上传hexo中public文件
 deploy:
 -  type: git
    repository: git@github.com:su89/su89.github.io.git
    branch: master
 -  type: rsync
    host: 你 VPS 的 IP 地址或者域名
    user: root
    root: 你想将 Hexo 生成的静态文件存放在 VPS 中的目录 例如: /www/hexo/blog/
    port: 你 VPS 的 ssh 端口号
    delete: true
    verbose: true
    ignore_errors: false
*必须先在 VPS 上创建好了想要存放 Hexo 静态文件的目录， rsync 不能创建不存在的目录

我看网上有的朋友说光在 Hexo 中使用 rsync 不够，在 VPS 也需要下载 rsync 服务，但是我在搬瓦工(又打了一次广告，搬瓦工是不是应该给我付点小费啊)上就没有下载 rsync 服务。如果你在 Hexo 中用 rsync 部署的时候一直报错，那就在 VPS 上下载 rsync 服务，看能否解决一直出错的原因，命令如下
$ yum -y install rsync
</code></pre><p>0x04 配置 Nginx</p>
<pre><code>Hexo 成功部署到 VPS 上之后，剩下的就是在vps上来配置 Nginx 了
[root@widlabs ~]# cd /usr/local/nginx/conf
[root@widlabs conf]# cp nginx.conf nginx.conf.bak
[root@widlabs conf]# vi nginx.conf
    修改nginx.conf文件：
    server {
        listen       80;
        server_name  widlabs.com www.widlabs.com;            #网站域名
        location / {
            root   /data/www;                      #你存放hexo文件的位置
            index  index.html index.htm index.php;        #添加 index.php
        }

[root@widlabs html]# /usr/local/nginx/sbin/nginx                        #启动Nginx
[root@widlabs html]# /usr/local/nginx/sbin/nginx -s stop                #停止Nginx
[root@widlabs html]# /usr/local/nginx/sbin/nginx -s reload              #重启Nginx
这样设置之后网站就应该还不能通过 VPS 的 IP 地方访问到。因为80端口不能被访问。
需要继续配置vps的防火墙：
1）vi /etc/sysconfig/iptables
2）加入-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
3）/etc/init.d/iptables stop                 ＃关闭防火墙 #start开启 #restart重启＃status状态

防火墙重启之后，访问vps地址，就能打开我们心爱的博客了
</code></pre><p>著作权归作者所有，转载请联系作者获得授权，并标注“非色的天”。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/08/23/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
